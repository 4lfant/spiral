rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {

        function currentUserId() {
            return request.auth.uid;
        }

        function isAuthorized() {
            return currentUserId() != null;
        }

        function isBelongsToCurrentUser() {
            return isRequestBelongsToCurrentUser() &&
            isResourceBelongsToCurrentUser();
        }

        function isRequestBelongsToCurrentUser() {
        	return request.resource.data.userId == currentUserId();
        }

        function isResourceBelongsToCurrentUser() {
        	return resource.data.userId == currentUserId();
        }

        match /users/{userId} {
            function ownerId() {
                return request.resource.data.id;
            }
            function isUserBelongsCurrentUser() {
                return ownerId() == currentUserId();
            }
            allow read;
            allow write: if isAuthorized() && isUserBelongsCurrentUser();
        }

        match /userHubs/{hubId} {
            allow read;
            allow create: if isAuthorized() && isRequestBelongsToCurrentUser();
            allow update: if isAuthorized() && isBelongsToCurrentUser();
            allow delete: if isAuthorized() && isResourceBelongsToCurrentUser();
        }

        match /hubPublications/{publicationId} {
            allow read;
            allow create: if isAuthorized() && isRequestBelongsToCurrentUser();
            allow update: if isAuthorized() && isBelongsToCurrentUser();
            allow delete: if isAuthorized() && isResourceBelongsToCurrentUser();
        }

        match /publicationComments/{publicationId}/comments/{commentId} {
            allow read;
            allow create: if isAuthorized() && isRequestBelongsToCurrentUser();
            allow update: if isAuthorized() && isBelongsToCurrentUser();
            allow delete: if isAuthorized() && isResourceBelongsToCurrentUser();
        }

        match /publicationLikes/{publicationId}/users/{userId} {
            function isLikeBelongsCurrentUser() {
                return userId == currentUserId();
            }
            allow read;
            allow write: if isAuthorized() && isLikeBelongsCurrentUser();
        }

        match /usersFollowHubs/{userId}/hubs/{hubId} {
            function isUserBelongsCurrentUser() {
                return userId == currentUserId();
            }
            allow read;
            allow write: if isAuthorized() && isUserBelongsCurrentUser();
        }

        match /hubsFollowers/{hubId}/users/{userId} {
            function isUserBelongsCurrentUser() {
                return userId == currentUserId();
            }
            allow read;
            allow write: if isAuthorized() && isUserBelongsCurrentUser();
        }

        match /userFeeds/{userId}/publications/{publicationId} {
            allow read;
        }

        match /usersSupportRequests/{requestId} {
        		allow read;
            allow write;
        }
    }
}